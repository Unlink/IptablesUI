from flask import Flask, request, render_template, redirect, url_for, flash\nimport subprocess\nimport os\nimport json\n\napp = Flask(__name__)\napp.secret_key = os.getenv('FLASK_SECRET_KEY', 'your_secret_key_here')\n\n# Authentication\nUSERNAME = os.getenv('FLASK_USERNAME', 'admin')\nPASSWORD = os.getenv('FLASK_PASSWORD', 'password')\n\ndef check_auth(username, password):\n    return username == USERNAME and password == PASSWORD\n\n@app.route('/', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        if check_auth(request.form['username'], request.form['password']):\n            return redirect(url_for('dashboard'))\n        else:\n            flash('Invalid credentials!')\n    return render_template('login.html')\n\n@app.route('/dashboard')\ndef dashboard():\n    rules = subprocess.check_output(['iptables', '-S']).decode('utf-8').splitlines()\n    return render_template('dashboard.html', rules=rules)\n\n@app.route('/add_rule', methods=['GET', 'POST'])\ndef add_rule():\n    if request.method == 'POST':\n        chain = request.form['chain']\n        protocol = request.form['protocol']\n        source_ip = request.form['source_ip']\n        destination_ip = request.form['destination_ip']\n        port = request.form['port']\n        action = request.form['action']\n\n        command = ['iptables', '-A', chain, '-p', protocol, '-s', source_ip, '-d', destination_ip, '--dport', port, action]\n        subprocess.run(command)\n        flash('Rule added successfully!')\n        return redirect(url_for('dashboard'))\n    \n    return render_template('add_rule.html')\n\n@app.route('/settings', methods=['GET', 'POST'])\ndef settings():\n    if request.method == 'POST':\n        if 'import' in request.form:\n            data = request.form['rules']\n            rules = json.loads(data)\n            for rule in rules:\n                subprocess.run(rule)  # Assuming each rule is an appropriate iptables command\n            flash('Rules imported successfully!')\n        elif 'export' in request.form:\n            # Export current rules as JSON\n            rules = subprocess.check_output(['iptables', '-S']).decode('utf-8').splitlines()\n            return json.dumps(rules)\n\n    return render_template('settings.html')\n\nif __name__ == '__main__':\n    app.run(port=8080)