version: '3.8'

services:
  # WireGuard VPN server
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bratislava
      - SERVERURL=auto  # Or your external IP/domain
      - SERVERPORT=51820
      - PEERS=10  # Number of clients
      - PEERDNS=auto
    volumes:
      - ./wireguard:/config
      - /lib/modules:/lib/modules:ro
    ports:
      - "51820:51820/udp"  # WireGuard port
      - "8080:8080"        # IptablesUI port (shared network)
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped

  # IptablesUI sharing WireGuard's network stack
  iptablesui:
    image: ghcr.io/unlink/iptablesui:latest
    # build: .  # Uncomment to build locally instead
    container_name: iptablesui
    network_mode: "container:wireguard"  # Share network stack with WireGuard
    cap_add:
      - NET_ADMIN  # Required for iptables and wg commands
    depends_on:
      - wireguard
    environment:
      - ADMIN_USER=admin
      - ADMIN_PASS=change_me_please
      - SECRET_KEY=your-secret-key-here
      - FLASK_ENV=production
    volumes:
      - ./data:/app/data  # Persist rules.json
    restart: unless-stopped
    # Note: No ports mapping needed - using wireguard's network
    # Note: cap_add NET_ADMIN enables iptables and wg commands access